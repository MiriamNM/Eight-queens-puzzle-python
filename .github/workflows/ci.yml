name: Docker Compose CI

on:
  pull_request:
    branches:
      - main

jobs:
  docker:
    runs-on: ubuntu-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Install Docker Compose
      run: |
        sudo curl -L "https://github.com/docker/compose/releases/download/v2.17.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose

    - name: Start services using docker-compose
      run: |
        docker-compose -f docker-compose.yml up --build -d

    - name: Start PostgreSQL
      run: |
        sudo service postgresql start
        echo "Waiting for PostgreSQL to start..."
        sleep 10
      env:
        POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
        POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        POSTGRES_DB: ${{ secrets.POSTGRES_DB }}

    - name: Set up database
      run: |
        psql -U ${{ secrets.POSTGRES_USER }} -c "CREATE DATABASE ${{ secrets.POSTGRES_DB }};" || echo "Database already exists"
        psql -U ${{ secrets.POSTGRES_USER }} -d ${{ secrets.POSTGRES_DB }} -c "GRANT ALL PRIVILEGES ON DATABASE ${{ secrets.POSTGRES_DB }} TO ${{ secrets.POSTGRES_USER }};" || echo "Privileges already granted"

    - name: Run Flyway migrations
      uses: red-gate/FlywayGitHubAction@main
      with:
        url: jdbc:postgresql://db:5432/${{ secrets.POSTGRES_DB }}
        user: ${{ secrets.POSTGRES_USER }}
        password: ${{ secrets.POSTGRES_PASSWORD }}
        locations: filesystem:/flyway/sql
        extraArgs: -outOfOrder=true

        
    - name: Run tests
      run: |
        pytest --maxfail=5 --disable-warnings -v
